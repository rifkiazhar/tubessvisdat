# -*- coding: utf-8 -*-
"""tubessvisdat_1301184035.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MqU0S2y7VUMeqfFlIvHfKiUMHiIHqcaR

MUHAMMAD RIFKI AZHARI - 1301184035
"""

#Data handing
import pandas as pd
import numpy as np

#Bokeh libraries

from bokeh.io import curdoc
from bokeh.plotting import figure, show
from bokeh.models import HoverTool, ColumnDataSource, Select
from bokeh.models import CategoricalColorMapper
from bokeh.palettes import Spectral6
from bokeh.layouts import WidgetBox, row, column
from bokeh.models import Slider, Select
from bokeh.models.widgets import Tabs, Panel, CheckboxGroup
from bokeh.models import NumeralTickFormatter

data = pd.read_csv('covid_19_indonesia_time_series_all.csv') #https://www.kaggle.com/hendratno/covid19-indonesia

data.head()

data.shape

datasett = data [['Date', 'Location', 'New Cases', 'Total Cases', 'Total Deaths', 'Total Recovered']]

datasett['Date'] = pd.to_datetime(datasett['Date'])
datasett.head()

#membuat location agar tidak sama
region = datasett.Location.unique().tolist()

#List dari setiap kolom
column_list = list(datasett.columns)

#Khusus kasus indonesia
datasett = data[data['Location'] == 'Indonesia']
source = ColumnDataSource(datasett)

#membuat figure plot
fig = figure(x_axis_type='datetime',
                      plot_height=500, plot_width=800,
                      title='Total Kasus Covid',
                      x_axis_label='Tanggal', y_axis_label='Total Kasus')

#Definisikan y-axis
fig.yaxis.formatter = NumeralTickFormatter(format="00")

#definisi line
fig.line('Date', 'Total Cases',
                  color='color', legend_label='Total Kasus di Indonesia',
                  source=source)

#definisi legend
fig.legend.location = 'top_right'

tooltips= [
                     ('Date', '@date{%F}'),
                     ('New Cases', '@new cases'),
                     ('Total Cases', '@total cases'),
                     ('Total Deaths', '@total_deaths'),
                     ('Total Recovered', '@total_recovered')
                    ]

#membuat hover
 fig.add_tools(HoverTool(tooltips=tooltips, formatters= {'@date' : 'datetime'}))

def update_fitur(attr, old, new):
   region_plot = [region_selection.labels[i] for i in region_selection.active]
  
   cases = cases.value

   new_source = create_data(region_plot, cases)

   source.data.update(new_source.data)

region_selection = CheckboxGroup(labels=region)

cases_select = Select(options = col_list[2:], value='Total Cases', title='Cases')
cases.on_change('value',update_fitur)

layout=row(WidgetBox(cases_select,region_selection),fig)
curdoc().add_root(layout)
